{"version":3,"sources":["Components/models/room2.gltf","Components/models/btnintroduction.gltf","App.js","reportWebVitals.js","index.js","Components/Modal/Modal.js"],"names":["App","room","useGLTFLoader","Room","introduction","Introduction","history","useHistory","className","colorManagement","shadowMap","camera","position","fov","zoom","rotation","onPointerDown","push","object","scene","dispose","intensity","enableRotate","enableZoom","maxPolarAngle","minPolarAngle","enablePan","screenSpacePanning","rotateSpeed","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","fallback","path","component","open","close","children","props","useSpring","opacity","from","div","style","onClick","document","getElementById"],"mappings":"4OAAe,MAA0B,mC,uBCA1B,MAA0B,6C,gBCiD1BA,MAlCf,WACE,IAAMC,EAAOC,YAAcC,GAAM,GAC3BC,EAAeF,YAAcG,GAAc,GAG3CC,EAAUC,cAKhB,OACE,0BAASC,UAAU,MAAnB,UACE,qBAAKA,UAAU,eAEf,eAAC,IAAD,CACAC,iBAAe,EACfC,WAAS,EACTC,OAAQ,CAAEC,SAAU,CAAC,GAAI,EAAG,EAAG,GAAIC,IAAI,GAAIC,KAAM,GAHjD,UAKE,uBAAMC,SAAU,CAAC,EAAE,KAAK,GAAxB,UACA,sBAAMC,cAdZ,WACEV,EAAQW,KAAK,kBAaT,SACE,2BAAWC,OAAQd,EAAae,MAAOP,SAAU,CAAC,GAAG,IAAI,OAE3D,2BAAWM,OAAQjB,EAAKkB,MAAOP,SAAU,CAAC,GAAG,IAAI,GAAIQ,QAAS,UAE9D,8BAAcC,UAAW,MACzB,cAAC,IAAD,CAAeC,cAAc,EAAMC,YAAY,EAAOC,cAAe,MAAOC,cAAe,MAAOC,WAAW,EAAOC,oBAAoB,EAAMC,aAAc,YC7BrJC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCCdQ,IAASC,OACP,cAAC,WAAD,CAAUC,SAAU,oDAApB,SACE,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,IAAIC,UAAW1C,IAC3B,cAAC,IAAD,CAAOyC,KAAK,gBAAgBC,UCPrB,YAAwC,EAAxBC,KAAwB,EAAlBC,MAAmB,IAAZC,EAAW,EAAXA,SAElCvC,EAAUC,cACVuC,EAAQC,YAAU,CAACC,QAAS,EAAGC,KAAM,CAACD,QAAS,KAErD,OACI,eAAC,IAASE,IAAV,CAAc1C,UAAU,QAAQ2C,MAAOL,EAAvC,UACKD,EACD,oBAAIrC,UAAU,OAAO4C,QAAS,kBAAM9C,EAAQW,KAAK,MAAjD,0BDKVoC,SAASC,eAAe,SAM1BzB,M","file":"static/js/main.268cfcdb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/room2.aad041ee.gltf\";","export default __webpack_public_path__ + \"static/media/btnintroduction.12390522.gltf\";","import React, { Suspense, useState } from \"react\";\nimport \"./App.css\";\nimport { Canvas, useFrame} from \"react-three-fiber\";\nimport Room from \"./Components/models/room2.gltf\";\nimport { useGLTFLoader , OrbitControls} from \"drei\";\nimport { AmbientLight } from \"three\";\nimport {BrowserRouter, NavLink, Route, Switch, useHistory} from \"react-router-dom\"\nimport Introduction from \"./Components/models/btnintroduction.gltf\";\nimport Modal from \"./Components/Modal/Modal.js\"\n\n// function Model() {\n//   const room = useGLTFLoader(Room, true);\n//   return <primitive object={room.scene} position={[0,0,0]} dispose={null} />\n// }\n\nfunction App() {\n  const room = useGLTFLoader(Room, true);\n  const introduction = useGLTFLoader(Introduction, true);\n\n  // const [isOpen, setIsOpen] = useState(false);\n  const history = useHistory();\n  function handleClick() {\n    history.push(\"/introduction\");\n  }\n \n  return (\n    <section className=\"App\">\n      <div className=\"navigation\">\n      </div>\n      <Canvas\n      colorManagement\n      shadowMap\n      camera={{ position: [0, -0, 2, 1], fov:55, zoom: 1 }}\n      >\n        <mesh rotation={[0,3.14,0]}>\n        <mesh onPointerDown={handleClick} >\n          <primitive object={introduction.scene} position={[0,-3.8,0]}/>\n        </mesh>\n        <primitive object={room.scene} position={[0,-3.8,0]} dispose={null}/>\n        </mesh>\n        <ambientLight intensity={1.6}/>\n        <OrbitControls enableRotate={true} enableZoom={false} maxPolarAngle={1.495} minPolarAngle={1.495} enablePan={false} screenSpacePanning={true} rotateSpeed={-0.6}/>\n      </Canvas>\n    </section>\n  );\n}\n\n\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {Suspense} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter, Switch, Route} from 'react-router-dom';\nimport Modal from './Components/Modal/Modal.js'\n\nReactDOM.render(\n  <Suspense fallback={<h1>Loading profile...</h1>}>\n    <BrowserRouter>\n        <Route path='/' component={App}/>\n        <Route path='/introduction' component={Modal}/>\n        {/* <Route path='/privacy-policy' component={() => { \n        window.location.href = 'https://example.com/1234'; \n        return null;}}/> */}\n    </BrowserRouter>\n  </Suspense>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React from 'react';\r\nimport './Modal.css';\r\nimport {useSpring, animated} from 'react-spring';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport default function Modal({open, close, children}) {\r\n    // const [fadeIn, setFadeIn, stop] = useSpring(() => ({opacity: 0}))\r\n    const history = useHistory();\r\n    const props = useSpring({opacity: 1, from: {opacity: 0}})\r\n\r\n    return (\r\n        <animated.div className=\"Modal\" style={props}>\r\n            {children}\r\n            <h1 className=\"exit\" onClick={() => history.push('/') }>x</h1>\r\n        </animated.div>\r\n    )\r\n}\r\n"],"sourceRoot":""}